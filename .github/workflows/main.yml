name: Deploy CinemaHub Auth Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Azure Container Registry
  ACR_NAME: "myconvit"
  
  # –ò–º—è Docker –æ–±—Ä–∞–∑–∞
  IMAGE_NAME: "cinemahub-auth"
  
  # Azure —Ä–µ—Å—É—Ä—Å—ã
  CONTAINER_APP_NAME: "cinemahub-auth-app"
  CONTAINER_APP_ENVIRONMENT: "my-app-env"
  RESOURCE_GROUP: "test-group"
  LOCATION: "northeurope"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    - name: üì• Checkout repository
      uses: actions/checkout@v4

    # 2. –í–æ–π—Ç–∏ –≤ Azure
    - name: üîê Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Azure
    - name: ‚úÖ Verify Azure connection
      run: |
        echo "Current subscription:"
        az account show --output table
        echo "Container Registry status:"
        az acr show --name ${{ env.ACR_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query "{name:name,loginServer:loginServer,location:location}" --output table

    # 4. –°–±–æ—Ä–∫–∞ –∏ –¥–µ–ø–ª–æ–π Container App
    - name: üöÄ Build and deploy Container App
      uses: azure/container-apps-deploy-action@v2
      with:
        # –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∫–æ–¥—É
        appSourcePath: ${{ github.workspace }}
        
        # Container Registry –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        acrName: ${{ env.ACR_NAME }}
        acrUsername: ${{ secrets.REGISTRY_USERNAME }}
        acrPassword: ${{ secrets.REGISTRY_PASSWORD }}
        
        # Azure —Ä–µ—Å—É—Ä—Å—ã
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        containerAppEnvironment: ${{ env.CONTAINER_APP_ENVIRONMENT }}
        resourceGroup: ${{ env.RESOURCE_GROUP }}
        location: ${{ env.LOCATION }}
        
        # Docker –æ–±—Ä–∞–∑ –¥–ª—è —Å–±–æ—Ä–∫–∏
        imageToBuild: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        # –ü—É—Ç—å –∫ Dockerfile
        dockerfilePath: ./AuthenticationAndAuthorization/AuthenticationAndAuthorization/Dockerfile
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        targetPort: 80
        ingress: external
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è .NET –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        environmentVariables: 'ASPNETCORE_ENVIRONMENT=Production ASPNETCORE_URLS=http://+:80'
    
    # 5. –ü–æ–ª—É—á–∏—Ç—å URL —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - name: üåê Get application URL
      run: |
        echo "==================================="
        echo "üéâ Deployment completed successfully!"
        echo "==================================="
        APP_URL=$(az containerapp show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query "properties.configuration.ingress.fqdn" \
          --output tsv)
        echo "Application URL: https://$APP_URL"
        echo "==================================="
